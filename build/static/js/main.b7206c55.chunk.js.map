{"version":3,"sources":["services/phoneBook.js","App.js","index.js"],"names":["baseurl","sendData","axios","post","deleteID","delete","newData","updateID","put","Person","personToShow","setPersons","map","value","name","number","onClick","person","window","confirm","phoneBookService","id","then","filter","item","ShowMessage","nameMessage","numberMessage","errorMessage","className","ShowError","PersonForm","addPerson","newName","newNumber","handleNumberChange","handlePersonChange","onSubmit","onChange","type","Filter","newSearch","handleNewSearch","App","useState","persons","setNewName","setNewNumber","setNewSearch","setNameMessage","setNumberMessage","setErrorMessage","useEffect","get","response","console","log","data","toLowerCase","includes","event","target","flag","repeatPerson","preventDefault","personObject","forEach","toLocaleLowerCase","catch","error","setTimeout","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b7206c55.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseurl = 'http://localhost:3001/persons'\n\nconst sendData = (sendData) => {\n    return axios.post(baseurl, sendData)\n}\n\nconst deleteData = (deleteID) => {\n    return axios.delete(`${baseurl}/${deleteID}`)\n}\n\nconst updateData = (newData, updateID) => {\n    return axios.put(`${baseurl}/${updateID}`, newData)\n}\n\nexport default{sendData, deleteData, updateData}","import axios from 'axios'\nimport React, { useEffect, useState } from 'react'\nimport phoneBookService from './services/phoneBook'\nconst baseUrl = '/api/persons'\n\n// 用于展示电话簿中的信息并进行相应的操作\nconst Person = ({personToShow, setPersons}) => {\n  // 用于从电话簿中删除联系人\n  const handleDelete = (person) => {\n    if(window.confirm(`Delete ${person.name} ?`)){\n      phoneBookService.deleteData(person.id).then(setPersons(personToShow.filter(item => item.id !== person.id)))\n    }\n  }\n\n  return(\n    <div>\n    {personToShow.map(value => \n      <div key={value.name}>{value.name} {value.number} <button onClick={() => handleDelete(value)}>delete</button><p/></div> \n    )}\n    </div>\n  )\n}\n\n // 当姓名和电话号码发生变化时，展示相关信息 \nconst ShowMessage = ({nameMessage, numberMessage, errorMessage}) => {\n  if (nameMessage === null && numberMessage === null){\n    return null\n  }else if(nameMessage === null && numberMessage != null){ \n    if (errorMessage != null)\n    {\n      return null\n    }else\n    {return(<div className=\"info\">{numberMessage}</div>)}\n  }else if(nameMessage != null && numberMessage === null){\n    return(<div className=\"info\">{nameMessage}</div>)\n  }else{\n    return(\n      <div>\n        <div className=\"info\">{numberMessage}</div>\n        <div className=\"info\">{nameMessage}</div>\n      </div>\n    )\n  }\n}\n\n// 展示错误信息\nconst ShowError = ({errorMessage}) => {\n  if(errorMessage === null){\n    return null\n  }else{\n    return (<div className=\"error\">{errorMessage}</div>)\n  }\n}\n\nconst PersonForm = ({addPerson, newName, newNumber, handleNumberChange, handlePersonChange}) => {\n  return(\n    <form onSubmit={addPerson}>\n          <div>Name: <input value={newName} onChange={handlePersonChange}/></div><p/>\n          <div>Number: <input value={newNumber} onChange={handleNumberChange}/></div><p/>\n          <button type=\"submit\">add</button>\n    </form>\n  )\n}\n\nconst Filter = ({newSearch, handleNewSearch}) =>{\n  return(\n    <div>\n        filter shown with <input value={newSearch} onChange={handleNewSearch}/>\n    </div>\n  )\n}\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ newSearch, setNewSearch ] = useState(\"\")\n  const [ nameMessage, setNameMessage] = useState(null)\n  const [ numberMessage, setNumberMessage] = useState(null)\n  const [ errorMessage, setErrorMessage] = useState(null)\n\n  // 从服务器端获取数据，注意，只有开启了json-server后才可以从服务器端获取数据。\n  useEffect(() => {\n    axios.get(baseUrl).then(response => {\n      console.log(response.data)\n      setPersons(response.data)\n    })\n    },[])\n\n  // 当新增联系人时，用于对它的姓名进行设置\n  const handlePersonChange = (event) => {\n    console.log(event.target.value)\n    setNewName(event.target.value)\n  }\n\n  // 当新增联系人时，用于对他的电话号码进行设置\n  const handleNumberChange = (event) => {\n    console.log(event.target.value)\n    setNewNumber(event.target.value)\n  }\n\n  // 当用于搜索的字符串发生更改时进行相应的处理\n  const handleNewSearch = (event) => {\n    console.log(event.target.value)\n    setNewSearch(event.target.value)\n  }\n\n  // 用于增加新的联系人\n  const addPerson = (event) => {\n    let flag = false\n    let updateID = 0\n    let repeatPerson = \"\" \n\n    event.preventDefault()\n\n    // 用于构建新的联系人对象\n    const personObject = {\n      name: newName,\n      number: newNumber\n    }\n\n    //判断联系人是否已经存在，如果不存在，则向persons数组和服务器中添加该联系人，如果存在，则提示相关信息\n    persons.forEach(value => {if(value.name.toLowerCase() === newName.toLocaleLowerCase()){\n      flag = true\n      updateID = value.id\n      repeatPerson = value.name\n    }})\n    if (!flag){\n      // 将新的联系人对象添加到服务器端的数据中，并添加到persons数组中。\n      phoneBookService.sendData(personObject).then(response => setPersons(persons.concat(response.data)))\n      //显示已经添加联系人的信息\n      setNameMessage(`Added ${newName}`)\n      setTimeout(() => {\n        setNameMessage(null)\n      }, 5000)\n      setNewName('')\n      setNewNumber('')\n    }else{\n      // 如果联系人已经存在，则对电话号码进行更新\n      if (window.confirm(`${repeatPerson} is already added to phonebook, replace the old number with a new one ?`)){\n        phoneBookService.updateData({...personObject, name: repeatPerson}, updateID).then(response => {\n          setPersons(persons.map(value => value.id !== updateID ? value : {...response.data, name: repeatPerson}))\n        }).catch(error => {\n          setErrorMessage(`Information of ${repeatPerson} has already been removed from server`)\n          setPersons(persons.filter(item => item.id !== updateID))\n          setTimeout(() => {\n            setErrorMessage(null)\n          }, 5000)\n          setNewName('')\n          setNewNumber('')\n        })\n        setNumberMessage(`${repeatPerson}'s number has been changed`)\n        setTimeout(() => {\n          setNumberMessage(null)\n        }, 5000)\n        setNewName('')\n       setNewNumber('')\n      }\n    }   \n  }\n\n  // 根据用于搜索的文本来过滤哪些联系人可以被显示，哪些不能被显示\n  const personToShow = (newSearch === \"\") \n                       ? persons \n                       : persons.filter(value => value.name.toLowerCase().includes(newSearch.toLowerCase()))\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <ShowError errorMessage={errorMessage}/>\n      <ShowMessage nameMessage={nameMessage} numberMessage={numberMessage} errorMessage={errorMessage}/>\n      <Filter newSearch={newSearch} handleNewSearch={handleNewSearch}/>\n      <h3>Add a new</h3>\n      <PersonForm addPerson={addPerson} newName={newName} \n                  newNumber={newNumber} handleNumberChange={handleNumberChange} \n                  handlePersonChange={handlePersonChange}/>\n      <h3>Numbers</h3>\n      <Person personToShow={personToShow} setPersons={setPersons}/>\n    </div>\n  )\n}\n\nexport default App","import ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n  <App />, \n  document.getElementById('root')\n)"],"sourceRoot":""}